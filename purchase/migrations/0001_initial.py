# Generated by Django 5.2.5 on 2025-10-08 06:38

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, help_text="Note interne visible sur l'achat (motif, consignes, etc.)", null=True)),
                ('montant_total_ht', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('montant_total_ttc', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('numero_achat', models.CharField(blank=True, db_index=True, max_length=30, null=True, unique=True)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmé'), ('cancelled', 'Annulé')], default='confirmed', max_length=20)),
                ('cancel_reason', models.TextField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AchatProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_code', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('quantite', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('prix_achat_gramme', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Prix unitaire HT par gramme', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('sous_total_prix_achat', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Taux de taxe (%) appliqué à la ligne', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Produit acheté',
                'verbose_name_plural': 'Produits achetés',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AchatProduitLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Identifiant technique global (UUIDv4).', unique=True)),
                ('lot_code', models.CharField(blank=True, db_index=True, help_text='Laisser vide pour auto-génération (LOT-YYYYMMDD-XXXXXXXX).', max_length=24, null=True, unique=True)),
                ('date_reception', models.DateField(auto_now_add=True)),
                ('quantite_total', models.PositiveIntegerField()),
                ('quantite_restante', models.PositiveIntegerField()),
                ('prix_achat_gramme', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date_peremption', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['date_reception', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('prenom', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=30, null=True, unique=True)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
