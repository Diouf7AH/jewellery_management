# Generated by Django 5.2.5 on 2025-09-22 22:56

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('purchase', '0003_alter_fournisseur_slug'),
        ('store', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AchatProduitLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_code', models.CharField(db_index=True, max_length=40)),
                ('date_reception', models.DateField(auto_now_add=True)),
                ('quantite_total', models.PositiveIntegerField()),
                ('quantite_restante', models.PositiveIntegerField()),
                ('prix_achat_gramme', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date_peremption', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['date_reception', 'id'],
            },
        ),
        migrations.AlterModelOptions(
            name='achat',
            options={'ordering': ['-id']},
        ),
        migrations.RemoveIndex(
            model_name='achatproduit',
            name='purchase_ac_numero__c6efcd_idx',
        ),
        migrations.RemoveField(
            model_name='achatproduit',
            name='fournisseur',
        ),
        migrations.RemoveField(
            model_name='achatproduit',
            name='numero_achat_produit',
        ),
        migrations.RemoveField(
            model_name='achatproduit',
            name='tax',
        ),
        migrations.AddField(
            model_name='achat',
            name='description',
            field=models.TextField(blank=True, help_text="Note interne visible sur l'achat (motif, consignes, etc.)", null=True),
        ),
        migrations.AddField(
            model_name='achat',
            name='numero_achat',
            field=models.CharField(blank=True, db_index=True, max_length=30, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='achatproduit',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='achatproduit',
            name='tax_rate',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Taux de taxe (%) appliqué à la ligne', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='achat',
            name='montant_total_ht',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12),
        ),
        migrations.AlterField(
            model_name='achat',
            name='montant_total_ttc',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12),
        ),
        migrations.AlterField(
            model_name='achatproduit',
            name='lot_code',
            field=models.CharField(blank=True, db_index=True, max_length=40, null=True),
        ),
        migrations.AlterField(
            model_name='achatproduit',
            name='prix_achat_gramme',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Prix unitaire HT par gramme', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='achatproduit',
            name='sous_total_prix_achat',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12),
        ),
        migrations.AddIndex(
            model_name='achat',
            index=models.Index(fields=['status'], name='purchase_ac_status_c072ae_idx'),
        ),
        migrations.AddIndex(
            model_name='achatproduit',
            index=models.Index(fields=['lot_code'], name='purchase_ac_lot_cod_5bdf65_idx'),
        ),
        migrations.AddField(
            model_name='achatproduitlot',
            name='achat_ligne',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lots', to='purchase.achatproduit'),
        ),
        migrations.AddIndex(
            model_name='achatproduitlot',
            index=models.Index(fields=['lot_code', 'date_reception'], name='purchase_ac_lot_cod_65aff0_idx'),
        ),
        migrations.AddIndex(
            model_name='achatproduitlot',
            index=models.Index(fields=['achat_ligne', 'date_reception'], name='purchase_ac_achat_l_617e56_idx'),
        ),
        migrations.AddIndex(
            model_name='achatproduitlot',
            index=models.Index(fields=['quantite_restante'], name='purchase_ac_quantit_97890d_idx'),
        ),
        # --- Contraintes ACHAT ---
        migrations.AddConstraint(
            model_name='achat',
            constraint=models.CheckConstraint(
                check=models.Q(montant_total_ht__gte=0),
                name='achat_ht_gte_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achat',
            constraint=models.CheckConstraint(
                check=models.Q(montant_total_ttc__gte=0),
                name='achat_ttc_gte_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achat',
            constraint=models.CheckConstraint(
                check=models.Q(montant_total_ttc__gte=models.F('montant_total_ht')),
                name='achat_ttc_gte_ht',
            ),
        ),
        migrations.AddConstraint(
            model_name='achat',
            constraint=models.CheckConstraint(
                check=(
                    models.Q(cancelled_at__isnull=False, cancelled_by__isnull=False, status='cancelled')
                    |
                    models.Q(cancelled_at__isnull=True,  cancelled_by__isnull=True,  status='confirmed')
                ),
                name='achat_cancel_fields_consistency',
            ),
        ),

        # --- Contraintes ACHATPRODUIT ---
        migrations.AddConstraint(
            model_name='achatproduit',
            constraint=models.CheckConstraint(
                check=models.Q(tax_rate__gte=0),
                name='achatprod_tax_rate_gte_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduit',
            constraint=models.CheckConstraint(
                check=models.Q(tax_amount__gte=0),
                name='achatprod_tax_amount_gte_0',
            ),
        ),

        # --- Contraintes ACHATPRODUITLOT ---
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.UniqueConstraint(
                fields=('achat_ligne', 'lot_code'),
                name='uniq_lot_code_per_achat_ligne',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.CheckConstraint(
                check=models.Q(quantite_total__gt=0),
                name='lot_quantite_total_gt_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.CheckConstraint(
                check=models.Q(quantite_restante__gte=0),
                name='lot_quantite_restante_gte_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.CheckConstraint(
                check=models.Q(quantite_restante__lte=models.F('quantite_total')),
                name='lot_quantite_restante_lte_total',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.CheckConstraint(
                check=models.Q(prix_achat_gramme__gte=0),
                name='lot_prix_achat_gramme_gte_0',
            ),
        ),
        migrations.AddConstraint(
            model_name='achatproduitlot',
            constraint=models.CheckConstraint(
                check=(
                    models.Q(date_peremption__isnull=True)
                    |
                    models.Q(date_peremption__gte=models.F('date_reception'))
                ),
                name='lot_peremption_after_or_null',
            ),
        ),

    ]
