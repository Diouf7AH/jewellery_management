# Generated by Django 5.2.5 on 2025-10-20 03:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0002_initial'),
        ('purchase', '0001_initial'),
        ('sale', '0002_initial'),
        ('store', '0001_initial'),
        ('vendor', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='inventorymovement',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='dst_bijouterie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movements_as_destination', to='store.bijouterie'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='facture',
            field=models.ForeignKey(blank=True, help_text='Facture liée au mouvement (vente/retour client).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements', to='sale.facture'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='lot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='purchase.lot'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movements', to='store.produit'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='src_bijouterie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movements_as_source', to='store.bijouterie'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_assignments', to='vendor.vendor'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='vente',
            field=models.ForeignKey(blank=True, help_text='Vente liée au mouvement (accès direct).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements', to='sale.vente'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='vente_ligne',
            field=models.ForeignKey(blank=True, help_text='Ligne de vente d’origine (si traçable).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements', to='sale.venteproduit'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['movement_type', 'occurred_at'], name='inventory_i_movemen_76afde_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['facture'], name='inventory_i_facture_d7c677_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['vente'], name='inventory_i_vente_i_2b6b32_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['produit', 'occurred_at'], name='inventory_i_produit_303484_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['src_bijouterie'], name='inventory_i_src_bij_efb4ae_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['dst_bijouterie'], name='inventory_i_dst_bij_f27607_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['vendor', 'occurred_at'], name='inventory_i_vendor__b5a204_idx'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['movement_type', 'vendor'], name='inventory_i_movemen_54d089_idx'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.CheckConstraint(condition=models.Q(('qty__gt', 0)), name='inv_move_qty_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('src_bucket', 'BIJOUTERIE'), _negated=True), ('src_bijouterie__isnull', False), _connector='OR'), name='inv_move_src_bijouterie_required_when_src_bucket_is_shop'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('dst_bucket', 'BIJOUTERIE'), _negated=True), ('dst_bijouterie__isnull', False), _connector='OR'), name='inv_move_dst_bijouterie_required_when_dst_bucket_is_shop'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('movement_type', 'TRANSFER'), _negated=True), models.Q(('dst_bucket', 'BIJOUTERIE'), ('src_bucket', 'BIJOUTERIE'), models.Q(('src_bijouterie', models.F('dst_bijouterie')), _negated=True)), _connector='OR'), name='inv_move_transfer_src_dst_must_differ'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('movement_type', 'VENDOR_ASSIGN'), _negated=True), ('vendor__isnull', False), _connector='OR'), name='ck_vendor_assign_requires_vendor'),
        ),
        migrations.AddConstraint(
            model_name='inventorymovement',
            constraint=models.UniqueConstraint(fields=('sale_out_key',), name='uniq_sale_out_per_sale_line_key'),
        ),
    ]
